// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Store {
  NONE
  LIVERPOOL
  SEARS
  AMAZON
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique @map("session_token")
  userId       String   @map("user_id")
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("sessions")
}

model User {
  id            String     @id @default(cuid())
  name          String?
  email         String?    @unique
  emailVerified DateTime?  @map("email_verified")
  image         String?
  sessions      Session[]
  mesas         Mesa[]

  @@map("users")
}

model VerificationToken {
  identifier String
  token      String    @unique
  expires    DateTime

  @@unique([identifier, token])
  @@map("verification_tokens")
}

model Mesa {
  id          String    @id @default(cuid())
  name        String
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  User        User?     @relation(fields: [userId], references: [id])
  userId      String?
  regalos     Regalo[]
}

model Regalo {
  id          String    @id @default(cuid())
  name        String
  imageUrl    String
  price       String
  delivery    String?
  items       Int
  store       Store     @default(NONE)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  Mesa        Mesa?     @relation(fields: [mesaId], references: [id])
  mesaId      String?
  Payment     Payment[]
}

model Payment {
  id              String    @id @default(cuid())
  type            String
  status          String
  stripeSessionId String
  createdAt       DateTime  @default(now())
  Regalo          Regalo?   @relation(fields: [regaloId], references: [id])
  regaloId        String?

  @@map("payments")
}